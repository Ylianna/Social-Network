{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","descriptionBlock","mainPhoto","contact","postsBlock","addPosts","posts","postsTextarea","item","ProfileStatusWithHooks","props","_useState","useState","_useState2","Object","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","a","createElement","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","_ref","handleSubmit","profile","error","onSubmit","className","style","formSummaryError","createField","Input","type","Textarea","keys","contacts","map","key","s","ProfileData","_ref2","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitle","contactValue","Contact","_ref3","ProfileInfo","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","target","files","length","ProfileInfo_ProfileDataForm","initialValues","formData","then","p","ProfileInfo_ProfileData","ProfileInfo_ProfileStatusWithHooks","Post","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","component","placeholder","validate","required","MyPosts","React","memo","postsElements","MyPosts_Post_Post","id","createRef","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","components_Profile_Profile","assign","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/2.220fbee6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2EFKq\",\"mainPhoto\":\"ProfileInfo_mainPhoto__U8-rB\",\"contact\":\"ProfileInfo_contact__qj0fz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2W-RQ\",\"addPosts\":\"MyPosts_addPosts__2Sagc\",\"posts\":\"MyPosts_posts__C32B_\",\"postsTextarea\":\"MyPosts_postsTextarea__1bQRj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__212i9\"};","import React, {useEffect, useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\nsetStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\nsetEditMode(true);\r\n  }\r\n     const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                    <div>\r\n                        <b>Status</b>:  <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode} value={status}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from './ProfileInfo.module.css';\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error }) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n       <div><button>save</button></div>\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n\r\n        <div>\r\n            <b> My professional skills</b>: {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea )}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>About me</b>: {createField(\"About me\", \"aboutMe\", [], Textarea )}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: \"edit-profile\"})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n      if  (e.target.files.length) {\r\n          savePhoto(e.target.files[0]);\r\n      }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(() => {\r\n            setEditMode(false);\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          {/*  <div>\r\n                <img\r\n                    src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'/>\r\n            </div>*/}\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto} />\r\n                { isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n                {editMode ? <ProfileDataForm initialValues ={profile} profile={profile} onSubmit={onSubmit}  p/> : <ProfileData goToEditMode={() => {setEditMode(true)}} profile={profile} isOwner={isOwner} /> }\r\n\r\n\r\n\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"Yes\" : \"No\"}\r\n        </div>\r\n        {!profile.lookingForAJob &&\r\n        <div>\r\n            <b> My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n// const ProfileDataForm = ({profile}) => {\r\n// return <div>\r\n//    form\r\n// </div>\r\n// }\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}>\r\n        <b>{contactTitle}</b>: {contactValue}\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://img.icons8.com/bubbles/2x/user-male.png' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]} className={s.postsTextarea} />\r\n        </div>\r\n        <div>\r\n            <button className={s.addPosts}>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo saveProfile={props.saveProfile} savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId =this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n    // saveProfile: state.profilePage.saveProfile\r\n\r\n\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}